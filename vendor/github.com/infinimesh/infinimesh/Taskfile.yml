version: '2.2'

tasks:
  debug-mqtt-send:
    desc: Send mqtt message to local broker
    env:
      PORT: 8089
    cmds:
      - go run hack/mqtt_testclients/produce/produce.go -broker localhost:$PORT
  proto:
    desc: Generate protobuf files
    cmds:
      - prototool generate
      - api-spec-converter --from=swagger_2 --to=openapi_3 --syntax=yaml --order=alpha pkg/apiserver/apipb/api.swagger.json > docs/swagger-ui/openapi_base.yaml
      - combine-yaml -i docs/swagger-ui/mixin.yaml docs/swagger-ui/openapi_base.yaml -o docs/swagger-ui/openapi.yaml
      - rm docs/swagger-ui/openapi_base.yaml
  lint:
    desc: Run linter
    cmds:
      - golangci-lint run --tests=false
  build:
    desc: Perform full go build of all binaries
    cmds:
      - go install ./...
    env:
      GO111MODULE: on
  test:
    desc: Run tests
    cmds:
      - go test ./...
  docker:
    desc: Perform docker build for all Dockerfiles
    silent: true
    cmds:
      - |
        set -e
        _root=$PWD
        cd ./Dockerfiles
        for f in *; do
          echo docker build -f $f/Dockerfile -t quay.io/infinimesh/$f:latest $_root
          docker build -f $f/Dockerfile -t quay.io/infinimesh/$f:latest $_root &
        done
        wait
  docker-pull-images:
    desc: Pull all latest docker images from quay
    silent: true
    cmds:
      - |
        set -e
        _root=$PWD
        cd ./Dockerfiles
        for f in *; do
          echo docker pull quay.io/infinimesh/$f:latest
          docker pull quay.io/infinimesh/$f:latest &
        done
        wait
  start-dev:
    silent: true
    deps:
      - docker-pull-images
    cmds:
      - docker-compose down
      - docker-compose up -d
      - go run hack/import_dgraph_sample_data.go -drop
      - |
        curl -s -d '{"username" : "joe", "password" : "test123"}' localhost:8081/token
  release:
    cmds:
      - rm -rf dist/ && goreleaser
  default:
    cmds:
      - task: build
